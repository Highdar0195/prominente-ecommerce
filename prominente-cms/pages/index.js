import Head from "next/head";
import { useState, useEffect } from "react";
import LoginForm from "../src/components/LoginForm";
import Logo from "../src/components/Logo";
import withPublic from "../src/utils/routes/withPublic";

function Home({ authContext }) {
  const { login, formatAuthState, logout, setIsValidated, setLoading } =
    authContext;

  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");

  const handleLogin = async (e) => {
    e.preventDefault();
    const response = await login(email, password);
    setLoading(true);

    if (!response) {
      setLoading(false);
      return;
    }

    const formatted = formatAuthState(response);
    formatted.token = await response.user.getIdToken();
    const token = formatted.token;
    // const res = await fetcher("/api/user", formatted.token);
    const res = await fetch("/api/user", {
      method: "GET",
      headers: new Headers({ "Content-Type": "application/json", token }),
      credentials: "same-origin",
    });
    const data = await res.json();

    if (!res.ok) {
      await logout();
      setLoading(false);
      alert(data.message);
      return;
    }

    setIsValidated(true);
    setLoading(false);
    // console.log(data);
  };

  // use on every page LOCAL
  // useEffect(() => {
  //   handleLocalStorageValidation();
  // }, [isValidated]);

  useEffect(() => {
    setIsValidated(true);
  }, []);

  return (
    <div className="flex items-center justify-center min-h-screen px-4 bg-white">
      <Head>
        <title>Prominente CMS</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="space-y-8 flex flex-col items-center justify-center max-w-xs w-full">
        <Logo />
        <form
          onSubmit={handleLogin}
          className="border rounded p-8 space-y-6 w-full"
        >
          <LoginForm
            fieldLabel="Email Address"
            type="email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
          />
          <LoginForm
            fieldLabel="Password"
            type="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
          />
          <button type="submit" className="btn-primary-filled">
            Log in
          </button>
        </form>
      </main>
    </div>
  );
}
export default withPublic(Home);
