import { useState, useEffect } from "react";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import {
  deleteDoc,
  doc,
  increment,
  updateDoc,
  collection,
  addDoc,
  serverTimestamp,
} from "firebase/firestore";
import { Tbody, Tr, Td, useToast } from "@chakra-ui/react";

import { db } from "../src/utils/firebase/initClient";
import withPrivate from "../src/utils/routes/withPrivate";
import { useCart } from "../src/utils/contexts/cartContext";
import { CardSolidIcon, SettingsIcon } from "../src/components/general/icons";
import Show from "../src/components/wrapper/Show";
import AppTable from "../src/components/general/AppTable";

const CheckoutPage = ({ authContext }) => {
  const { currentUser, userCredentials, handleSettingUserCredentials } =
    authContext;
  const { cartItems, totalBill, totalCartCount } = useCart();

  const router = useRouter();
  const toast = useToast();

  const [isTransacting, setIsTransacting] = useState(false);

  const handleCheckout = async (e) => {
    e.preventDefault();
    setIsTransacting(true);
    const items = [];
    cartItems?.forEach((item) =>
      items.push({
        name: item.name,
        details: item.details,
        image: item.image,
        price: item.price,
        qty: item.qty,
        pid: item.pid,
        category: item.category,
      })
    );
    await addDoc(collection(db, `users/${currentUser?.uid}/checkouts`), {
      status: "pending",
      itemCount: totalCartCount,
      timestamp: serverTimestamp(),
      totalBill: totalBill,
      items: items,
      owner: `${userCredentials.firstname} ${userCredentials.surname}`,
      address: userCredentials.address,
      contact: userCredentials.contact,
      uid: currentUser?.uid,
    });

    // handleIncrementSales();

    setTimeout(() => {
      router.push("/cart");

      cartItems?.forEach((item) =>
        deleteDoc(doc(db, `users/${currentUser?.uid}/cart`, item.id))
      );
    }, 3000);
  };

  useEffect(() => {
    handleSettingUserCredentials();
  }, []);

  useEffect(() => {
    if (userCredentials?.address === "") {
      router.push("/cart");
      toast({
        title: "Error!",
        description: "Please fill up the address form on your profile.",
        status: "error",
        duration: 5000,
        isClosable: true,
        position: "bottom",
      });
    } else if (userCredentials?.contact === "") {
      router.push("/cart");
      toast({
        title: "Error!",
        description: "Please provide a contact number on your profile.",
        status: "error",
        duration: 5000,
        isClosable: true,
        position: "bottom",
      });
    }
  }, [userCredentials]);

  return (
    <div className="relative">
      <Head>
        <title>Checkout | Prominente</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/vercel.svg" />
      </Head>

      {isTransacting && (
        <div className="fixed bg-black h-full w-full flex items-center justify-center z-20 opacity-75">
          <div className="flex items-center space-x-2 text-white">
            <SettingsIcon className="h-8 w-8 animate-spin" />
            <h3 className="font-semibold tracking-widest">Please wait...</h3>
          </div>
        </div>
      )}

      <main className="page-width-container page-height-container space-y-12">
        <section className="space-y-4">
          <h1 className="primary-header">Checkout Page</h1>
          <p className="tracking-wider">
            <Link href="/">
              <a className="hover:underline">Homepage</a>
            </Link>{" "}
            /{" "}
            <Link href="/cart">
              <a className="hover:underline">My Cart</a>
            </Link>{" "}
            / <span className="underline">Checkout</span>
          </p>
        </section>

        <section className="space-y-4 border-b pb-12">
          <h3 className="font-semibold">Your Orders</h3>
          <AppTable
            colNames={["Preview", "Item", "Price", "Qty"]}
            className="max-h-[15rem] md:max-h-[16rem] border"
          >
            <Tbody className="font-light">
              {cartItems?.map((product, i) => (
                <Tr key={product.id}>
                  <Td className="">
                    <img
                      src={product.image}
                      alt="Picture of the author"
                      className="w-40"
                    />
                  </Td>
                  <Td className="space-y-8">
                    <section className="space-y-1">
                      <h3 className="font-medium">{product.name}</h3>
                      <p className="tracking-widest">{product.details}</p>
                    </section>
                  </Td>
                  <Td>₱ {product.price}.00</Td>
                  <Td>
                    <p className="">{product.qty}</p>
                  </Td>
                </Tr>
              ))}
            </Tbody>
          </AppTable>
        </section>

        <section className="space-y-4 border-b pb-12">
          <h3 className="font-semibold">Account Information</h3>
          <div className="flex flex-col space-x-0 md:flex-row md:space-x-4 space-y-4 md:space-y-0">
            <div className="rounded-md p-6 space-y-2 border w-full capitalize">
              <h3 className="font-semibold">Full Name</h3>
              <p>
                {userCredentials?.firstname} {userCredentials?.surname}{" "}
              </p>
            </div>
            <div className="rounded-md p-6 space-y-2 border w-full">
              <h3 className="font-semibold">Contact Number</h3>
              <p>{userCredentials?.contact}</p>
            </div>
          </div>
          <div className="rounded-md p-6 space-y-2 border w-full capitalize">
            <h3 className="font-semibold">Shipping Address</h3>
            <p>{userCredentials?.address}</p>
          </div>
        </section>

        <form onSubmit={handleCheckout} className="space-y-4">
          <h3 className="font-semibold">Payment Method</h3>
          <div className="border p-6 rounded-md space-y-8">
            <section className="flex items-center space-x-4">
              <div className="border p-2 rounded-md">
                <CardSolidIcon className="h-8 w-8" />
              </div>
              <p>Debit / Credit Card</p>
            </section>
            <section className="flex flex-col sm:flex-row space-x-0 sm:space-x-8 space-y-6 sm:space-y-0">
              <section className="space-y-1 flex-1">
                <p className="font-light">Enter Card Number *</p>
                <input required type="text" className="input-outline w-full" />
              </section>
              <section className="space-y-1 sm:w-1/4">
                <p className="font-light">Valid Date</p>
                <input
                  required
                  type="text"
                  className="input-outline w-full"
                  placeholder="MM/YY"
                  maxLength="5"
                />
              </section>
              <section className="space-y-1 sm:w-1/6">
                <p className="font-light">CVV *</p>
                <input
                  required
                  type="password"
                  className="input-outline w-full"
                  maxLength="5"
                />
              </section>
            </section>
            <p className="text-right">
              Your card details and CVV will not be stored.
            </p>
          </div>
          <section className="flex justify-end">
            <button
              type="submit"
              className="btn-primary-filled tracking-widest font-semibold w-max px-7"
            >
              Pay ({totalCartCount} items): ₱{totalBill}.00
            </button>
          </section>
        </form>
      </main>
    </div>
  );
};

export default withPrivate(CheckoutPage);
